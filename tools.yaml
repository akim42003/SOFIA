messages:
  - role: assistant
    content: "Hi Alex! How can I help you?"

tools:
  - type: function
    function:
      name: save_file
      description: >
        Edits and saves generated content into a file that already exists.
        Use this tool when you want to persist output for logging, archiving, or future reference.
        For example, if you need to store an essay, transcript, or any generated text for later review,
        call this tool. All file paths must start with '~/SOFIA/' (e.g., '~/SOFIA/outputs/haiku.txt').
      parameters:
        type: object
        properties:
          action:
            type: string
            description: "The operation to perform. Choose 'save' or 'create' to write new content."
            enum:
              - save
              - create
          path:
            type: string
            description: >
              The complete file path where the content will be saved.
              This should begin with '~/SOFIA/outputs/'.
          content:
            type: string
            description: "The text content to write to the file."
        required:
          - action
          - path

  - type: function
    function:
      name: read_file
      description: >
        Reads content from a file and imports it into the conversation.
        Use this tool when you want to inject external context into the chat,
        such as retrieving a saved document, a configuration file, or previously logged data.
        The file path provided should point to an accessible file.
      parameters:
        type: object
        properties:
          action:
            type: string
            description: "The operation to perform. Use 'read' or 'open' to load the file content."
            enum:
              - read
              - open
          path:
            type: string
            description: "The path of the file to be read."
        required:
          - action
          - path

  - type: function
    function:
      name: execute_command
      description: >
        Executes system commands directly on the host terminal.
        Use this tool for operations that require command line actions
        such as moving files, changing directories, or running scripts.
        Use with caution, ensuring that only safe and validated commands are executed.
      parameters:
        type: object
        properties:
          command:
            type: string
            description: "The shell command to execute (e.g., 'ls -la', 'mv file1 file2')."
        required:
          - command

  - type: function
    function:
      name: "gmail_search_emails"
      description: "Search inbox by sender and/or subject and return the message verbatim unless a summary or snippet is requested."
      parameters:
        type: object
        properties:
          sender:
            type: string
          subject:
            type: string
          max_results:
            type: integer
        required: []

  - type: function
    function:
      name: "gmail_fetch_emails"
      description: >
        Fetch messages from your Gmail inbox.  With `all_inbox=true` you get
        every message; with `all_inbox=false` (the default) you get only
        Primaryâ€‘tab (important) messages by excluding other categories.
        You can also set `unread_only=true` to limit to unread mail.
      parameters:
        type: object
        properties:
          max_results:
            type: integer
            description: "How many messages to retrieve."
          unread_only:
            type: boolean
            description: "If true, only return unread messages."
          all_inbox:
            type: boolean
            description: >
              If true, include all messages in INBOX;
              if false, only Primary tab (default).
        required: []
